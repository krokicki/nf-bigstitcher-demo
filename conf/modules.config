/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: SPARK_STARTMANAGER {
        errorStrategy = 'terminate'
        ext.sleep_secs = 2
    }

    withName: SPARK_STARTWORKER {
        errorStrategy = 'terminate'
        ext.sleep_secs = 2
    }

    withName: SPARK_WAITFORMANAGER {
        errorStrategy = 'terminate'
        ext.sleep_secs = 2
        ext.max_wait_secs = 7200
    }

    withName: SPARK_WAITFORWORKER {
        errorStrategy = 'terminate'
        ext.sleep_secs = 2
        ext.max_wait_secs = 7200
    }

    withName: SPARK_TERMINATE {
        errorStrategy = 'terminate'
    }

    withName: BIGSTITCHER_STITCH {
        errorStrategy = 'terminate'
        ext.args = "--blockSize 128,128,128 --UINT8 --minIntensity 1 --maxIntensity 254 --channelId 0 ${params.extra_opts}"
    }
}

// Returns the stitching channel parameter if one was selected, or an empty string
def stitching_channel()  {
    sc = params.stitching_channel
    // If stitching channel is not set or set to 'all', then use all channels for stitching.
    if (!sc || sc=='all')
        return ''
    // If the user provides the channel in the form "c1" or "ch1", we just want the number:
    def sc_num_lookup = (sc =~ /(\d+)/)
    if (sc_num_lookup.find()) {
        return "-r "+sc_num_lookup[0][1]
    } else {
        log.error "Invalid value for --stitching_channel: $sc"
        System.exit(1)
    }
}
